<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.amazonaws</groupId>
	<artifactId>dynamodb-geo-server</artifactId>
	<packaging>war</packaging>
	<name>Amazon DynamoDB Geo Sample Server</name>
	<version>3.0.0</version>
	<description>Geo Library for Amazon DynamoDB Sample Server demonstrates usage 
	of the library for a cloud-backed mobile app development scenario.
	</description>
	<url>https://aws.amazon.com/dynamodb</url>

	<scm>
		<url>ssh://git.amazon.com:2222/pkg/GeoForDynamoDB</url>
	</scm>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://aws.amazon.com/apache2.0</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<aws-java-sdk2.version>2.20.32</aws-java-sdk2.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>dynamodb</artifactId>
			<version>${aws-java-sdk2.version}</version>
		</dependency>

		<!-- JUnit is needed to compile the integration test classes -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>com.google.geometry</groupId>
			<artifactId>s2-geometry</artifactId>
			<version>2.0.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>32.0.0-jre</version>
		</dependency>

		<dependency>
			<groupId>com.amazonaws.geo</groupId>
			<artifactId>dynamodb-geo</artifactId>
			<version>3.0.0</version>
			<scope>system</scope>
			<systemPath>${basedir}/../../target/dynamodb-geo-3.0.0.jar
			</systemPath>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>4.0.1</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<developers>
		<developer>
			<id>amazonwebservices</id>
			<organization>Amazon Web Services</organization>
			<organizationUrl>https://aws.amazon.com</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.3.0</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.4.0</version>
					<configuration>
						<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
						<webResources>
							<resource>
								<directory>resources</directory>
							</resource>
						</webResources>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>11</source>
						<target>11</target>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>